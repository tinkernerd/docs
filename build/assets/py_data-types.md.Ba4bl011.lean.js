import{_ as i,c as a,a3 as e,o as t}from"./chunks/framework.uL7cFZ_M.js";const c=JSON.parse('{"title":"Data Types","description":"","frontmatter":{"title":"Data Types","category":"Python","dateCreated":"2024-11-19T00:00:00.000Z","type":"Notes","tags":["data types","python"],"outline":"deep"},"headers":[],"relativePath":"py/data-types.md","filePath":"py/data-types.md","lastUpdated":null}'),n={name:"py/data-types.md"};function l(h,s,o,p,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="data-types-in-python" tabindex="-1">Data Types in Python <a class="header-anchor" href="#data-types-in-python" aria-label="Permalink to &quot;Data Types in Python&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Python provides various data types to define and manage data effectively. These include:</p><ol><li>Numbers</li><li>Strings</li><li>Booleans</li><li>Lists</li><li>Tuples</li><li>Dictionaries</li><li>Sets</li></ol><hr><h2 id="numbers" tabindex="-1">Numbers <a class="header-anchor" href="#numbers" aria-label="Permalink to &quot;Numbers&quot;">​</a></h2><ol><li>Represent numerical data and can perform arithmetic operations.</li><li>Types of numbers: <ul><li><strong>Integer (<code>int</code>)</strong>: Whole numbers, both positive and negative.</li><li><strong>Floating Point (<code>float</code>)</strong>: Decimal numbers.</li><li><strong>Complex Numbers (<code>complex</code>)</strong>: Numbers with a real and imaginary part.</li></ul></li></ol><h3 id="examples" tabindex="-1">Examples: <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # Integer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Float</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">j</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Complex number</span></span></code></pre></div><h3 id="common-functions" tabindex="-1">Common Functions: <a class="header-anchor" href="#common-functions" aria-label="Permalink to &quot;Common Functions:&quot;">​</a></h3><ul><li><code>type(x)</code>: Returns the type of <code>x</code>.</li><li><code>int()</code>: Converts to integer.</li><li><code>float()</code>: Converts to float.</li><li><code>complex()</code>: Converts to complex number.</li></ul><hr><h2 id="strings" tabindex="-1">Strings <a class="header-anchor" href="#strings" aria-label="Permalink to &quot;Strings&quot;">​</a></h2><ol><li>A sequence of characters enclosed in single, double, or triple quotes.</li><li>Strings are immutable.</li></ol><h3 id="examples-1" tabindex="-1">Examples: <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Hello&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;World&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;&quot;This is a </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">multiline string.&quot;&quot;&quot;</span></span></code></pre></div><h3 id="common-operations" tabindex="-1">Common Operations: <a class="header-anchor" href="#common-operations" aria-label="Permalink to &quot;Common Operations:&quot;">​</a></h3><ul><li>Concatenation: <code>&quot;Hello&quot; + &quot; &quot; + &quot;World&quot;</code> → <code>&quot;Hello World&quot;</code></li><li>Repetition: <code>&quot;Hi&quot; * 3</code> → <code>&quot;HiHiHi&quot;</code></li><li>Slicing: <code>&quot;Python&quot;[0:3]</code> → <code>&quot;Pyt&quot;</code></li><li>Methods: <code>upper()</code>, <code>lower()</code>, <code>strip()</code>, <code>replace()</code>, etc.</li></ul><h3 id="example" tabindex="-1">Example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Python&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text.upper())      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: &quot;PYTHON&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: &quot;Pyt&quot;</span></span></code></pre></div><hr><h2 id="booleans" tabindex="-1">Booleans <a class="header-anchor" href="#booleans" aria-label="Permalink to &quot;Booleans&quot;">​</a></h2><ol><li>Represents one of two values: <code>True</code> or <code>False</code>.</li><li>Often used in conditional statements and logical operations.</li></ol><h3 id="examples-2" tabindex="-1">Examples: <a class="header-anchor" href="#examples-2" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_active </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_admin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span></span></code></pre></div><h3 id="common-operations-1" tabindex="-1">Common Operations: <a class="header-anchor" href="#common-operations-1" aria-label="Permalink to &quot;Common Operations:&quot;">​</a></h3><ul><li>Logical Operators: <code>and</code>, <code>or</code>, <code>not</code></li><li>Comparison Operators: <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></li></ul><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: True</span></span></code></pre></div><hr><h2 id="lists" tabindex="-1">Lists <a class="header-anchor" href="#lists" aria-label="Permalink to &quot;Lists&quot;">​</a></h2><ol><li>A collection of items that is ordered, mutable, and allows duplicates.</li><li>Defined using square brackets <code>[]</code>.</li></ol><h3 id="examples-3" tabindex="-1">Examples: <a class="header-anchor" href="#examples-3" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="common-operations-2" tabindex="-1">Common Operations: <a class="header-anchor" href="#common-operations-2" aria-label="Permalink to &quot;Common Operations:&quot;">​</a></h3><ul><li>Access: <code>fruits[0]</code> → <code>&quot;apple&quot;</code></li><li>Modify: <code>fruits[1] = &quot;blueberry&quot;</code></li><li>Append: <code>fruits.append(&quot;orange&quot;)</code></li><li>Methods: <code>pop()</code>, <code>remove()</code>, <code>sort()</code>, etc.</li></ul><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fruits </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fruits.append(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fruits)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: [&#39;apple&#39;, &#39;banana&#39;, &#39;cherry&#39;, &#39;orange&#39;]</span></span></code></pre></div><hr><h2 id="tuples" tabindex="-1">Tuples <a class="header-anchor" href="#tuples" aria-label="Permalink to &quot;Tuples&quot;">​</a></h2><ol><li>Similar to lists but immutable (cannot be changed after creation).</li><li>Defined using parentheses <code>()</code>.</li></ol><h3 id="examples-4" tabindex="-1">Examples: <a class="header-anchor" href="#examples-4" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coordinates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="common-operations-3" tabindex="-1">Common Operations: <a class="header-anchor" href="#common-operations-3" aria-label="Permalink to &quot;Common Operations:&quot;">​</a></h3><ul><li>Access: <code>coordinates[0]</code> → <code>10</code></li><li>Methods: <code>count()</code>, <code>index()</code></li></ul><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coordinates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(coordinates[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: 20</span></span></code></pre></div><hr><h2 id="dictionaries" tabindex="-1">Dictionaries <a class="header-anchor" href="#dictionaries" aria-label="Permalink to &quot;Dictionaries&quot;">​</a></h2><ol><li>Collection of key-value pairs.</li><li>Defined using curly braces <code>{}</code>.</li></ol><h3 id="examples-5" tabindex="-1">Examples: <a class="header-anchor" href="#examples-5" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">person </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="common-operations-4" tabindex="-1">Common Operations: <a class="header-anchor" href="#common-operations-4" aria-label="Permalink to &quot;Common Operations:&quot;">​</a></h3><ul><li>Access: <code>person[&quot;name&quot;]</code> → <code>&quot;Alice&quot;</code></li><li>Modify: <code>person[&quot;age&quot;] = 30</code></li><li>Methods: <code>keys()</code>, <code>values()</code>, <code>items()</code></li></ul><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">person </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">person[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(person)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: {&#39;name&#39;: &#39;Alice&#39;, &#39;age&#39;: 30}</span></span></code></pre></div><hr><h2 id="sets" tabindex="-1">Sets <a class="header-anchor" href="#sets" aria-label="Permalink to &quot;Sets&quot;">​</a></h2><ol><li>Unordered collection of unique items.</li><li>Defined using curly braces <code>{}</code> or the <code>set()</code> function.</li></ol><h3 id="examples-6" tabindex="-1">Examples: <a class="header-anchor" href="#examples-6" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unique_numbers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="common-operations-5" tabindex="-1">Common Operations: <a class="header-anchor" href="#common-operations-5" aria-label="Permalink to &quot;Common Operations:&quot;">​</a></h3><ul><li>Add: <code>unique_numbers.add(6)</code></li><li>Remove: <code>unique_numbers.remove(3)</code></li><li>Mathematical operations: Union (<code>|</code>), Intersection (<code>&amp;</code>), Difference (<code>-</code>).</li></ul><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unique_numbers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unique_numbers.add(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(unique_numbers)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: {1, 2, 3, 4}</span></span></code></pre></div><hr><h2 id="type-conversion" tabindex="-1">Type Conversion <a class="header-anchor" href="#type-conversion" aria-label="Permalink to &quot;Type Conversion&quot;">​</a></h2><ol><li>You can convert between data types using built-in functions.</li></ol><table tabindex="0"><thead><tr><th>Function</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>int()</code></td><td>Converts to integer</td><td><code>int(3.14)</code> → <code>3</code></td></tr><tr><td><code>float()</code></td><td>Converts to float</td><td><code>float(3)</code> → <code>3.0</code></td></tr><tr><td><code>str()</code></td><td>Converts to string</td><td><code>str(3)</code> → <code>&quot;3&quot;</code></td></tr><tr><td><code>bool()</code></td><td>Converts to boolean</td><td><code>bool(0)</code> → <code>False</code></td></tr><tr><td><code>list()</code></td><td>Converts to list</td><td><code>list((1, 2))</code> → <code>[1, 2]</code></td></tr><tr><td><code>tuple()</code></td><td>Converts to tuple</td><td><code>tuple([1, 2])</code> → <code>(1, 2)</code></td></tr><tr><td><code>set()</code></td><td>Converts to set</td><td><code>set([1, 2, 2])</code> → <code>{1, 2}</code></td></tr></tbody></table><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;123&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Convert string to integer</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: &lt;class &#39;int&#39;&gt;</span></span></code></pre></div><hr><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><ol><li>Python provides various data types to work with different kinds of data.</li><li>Understanding data types and their operations is essential for writing efficient code.</li><li>Use type conversion functions to switch between types when needed.</li></ol>`,74)]))}const E=i(n,[["render",l]]);export{c as __pageData,E as default};
