import{_ as i,c as t,a3 as s,o as a}from"./chunks/framework.uL7cFZ_M.js";const c=JSON.parse('{"title":"Signing GitHub Releases","description":"","frontmatter":{"title":"Signing GitHub Releases","type":"Resource","tags":["github","git","security","releases"],"dateCreated":"2024-09-15T00:00:00.000Z","topic":["GitHub","Tech"],"outline":"deep"},"headers":[],"relativePath":"github/signing-repos.md","filePath":"github/signing-repos.md","lastUpdated":null}'),n={name:"github/signing-repos.md"};function r(o,e,g,l,h,u){return a(),t("div",null,e[0]||(e[0]=[s('<h1 id="signing-github-releases" tabindex="-1"><strong>Signing GitHub Releases</strong> <a class="header-anchor" href="#signing-github-releases" aria-label="Permalink to &quot;**Signing GitHub Releases**&quot;">​</a></h1><p>Digitally signing your GitHub releases and commits adds a layer of security and authenticity, ensuring that your code hasn&#39;t been tampered with. This guide provides resources and examples to help you sign your commits and tags for GitHub releases.</p><hr><h2 id="📚-resources" tabindex="-1"><strong>📚 Resources</strong> <a class="header-anchor" href="#📚-resources" aria-label="Permalink to &quot;**📚 Resources**&quot;">​</a></h2><ul><li><p><a href="https://github.com/MyHoneyBadger/awesome-github-wiki" target="_blank" rel="noreferrer">MyHoneyBadger/awesome-github-wiki</a><br> A curated list of resources and tips for using GitHub effectively.</p></li><li><p><a href="https://medium.com/bootstart/signed-commits-ec2cab9e7254" target="_blank" rel="noreferrer">Signed Commits: How to Get the Shiny “Verified” Badge | Medium</a><br> Learn how to sign commits and earn the &quot;Verified&quot; badge on GitHub.</p></li><li><p><a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits" target="_blank" rel="noreferrer">Signing Commits - GitHub Docs</a><br> Official GitHub documentation on managing commit signature verification.</p></li><li><p><a href="https://gist.github.com/hollodotme/edc4d4613ca602e70d242eae8b0a25cc" target="_blank" rel="noreferrer">Signing GitHub Releases - Gist by Holger Woltersdorf</a><br> A helpful guide to signing releases, contributed by <a href="https://gist.github.com/hollodotme" target="_blank" rel="noreferrer">Holger Woltersdorf</a>.</p></li></ul><hr><h2 id="🔧-why-sign-commits-and-releases" tabindex="-1"><strong>🔧 Why Sign Commits and Releases?</strong> <a class="header-anchor" href="#🔧-why-sign-commits-and-releases" aria-label="Permalink to &quot;**🔧 Why Sign Commits and Releases?**&quot;">​</a></h2><ul><li><strong>Security</strong>: Ensure the code comes from a trusted source.</li><li><strong>Integrity</strong>: Protect against tampering by verifying the cryptographic signature.</li><li><strong>Recognition</strong>: Gain the &quot;Verified&quot; badge for commits and releases on GitHub.</li></ul><hr><h2 id="💻-how-to-sign-commits-and-tags" tabindex="-1"><strong>💻 How to Sign Commits and Tags</strong> <a class="header-anchor" href="#💻-how-to-sign-commits-and-tags" aria-label="Permalink to &quot;**💻 How to Sign Commits and Tags**&quot;">​</a></h2><h3 id="step-1-configure-your-signing-key" tabindex="-1"><strong>Step 1: Configure Your Signing Key</strong> <a class="header-anchor" href="#step-1-configure-your-signing-key" aria-label="Permalink to &quot;**Step 1: Configure Your Signing Key**&quot;">​</a></h3><p>Set up your signing key globally:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.signingkey</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you@email.domain</span></span></code></pre></div>',13)]))}const m=i(n,[["render",r]]);export{c as __pageData,m as default};
