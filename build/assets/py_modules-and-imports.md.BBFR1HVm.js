import{_ as i,c as a,a3 as e,o as t}from"./chunks/framework.uL7cFZ_M.js";const c=JSON.parse('{"title":"Modules and Imports","description":"","frontmatter":{"title":"Modules and Imports","category":"Python","dateCreated":"2024-11-19T00:00:00.000Z","type":"Notes","tags":["modules","imports","python"],"outline":"deep"},"headers":[],"relativePath":"py/modules-and-imports.md","filePath":"py/modules-and-imports.md","lastUpdated":null}'),n={name:"py/modules-and-imports.md"};function l(h,s,p,o,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="modules-and-imports-in-python" tabindex="-1">Modules and Imports in Python <a class="header-anchor" href="#modules-and-imports-in-python" aria-label="Permalink to &quot;Modules and Imports in Python&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>A module in Python is a file containing Python code (functions, classes, variables) that can be reused across multiple programs. Python&#39;s import system allows you to access these modules.</p><hr><h2 id="what-is-a-module" tabindex="-1">What is a Module? <a class="header-anchor" href="#what-is-a-module" aria-label="Permalink to &quot;What is a Module?&quot;">​</a></h2><ol><li><strong>Built-in Modules</strong>: Pre-installed with Python (e.g., <code>math</code>, <code>os</code>, <code>sys</code>).</li><li><strong>Custom Modules</strong>: User-created Python files (e.g., <code>my_module.py</code>).</li><li><strong>Third-party Modules</strong>: Installed via package managers like <code>pip</code> (e.g., <code>numpy</code>, <code>pandas</code>).</li></ol><h3 id="examples" tabindex="-1">Examples: <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><ul><li>Built-in Module:<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(math.sqrt(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: 4.0</span></span></code></pre></div></li><li>Custom Module:<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In my_module.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> greet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">!&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In another file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my_module</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_module.greet(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: Hello, Alice!</span></span></code></pre></div></li></ul><hr><h2 id="importing-modules" tabindex="-1">Importing Modules <a class="header-anchor" href="#importing-modules" aria-label="Permalink to &quot;Importing Modules&quot;">​</a></h2><p>Python provides several ways to import modules.</p><h3 id="import-the-entire-module" tabindex="-1">Import the Entire Module <a class="header-anchor" href="#import-the-entire-module" aria-label="Permalink to &quot;Import the Entire Module&quot;">​</a></h3><ol><li>Imports all functions, classes, and variables from a module.</li><li>Syntax:<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_name</span></span></code></pre></div></li><li>Access members using dot notation (<code>module_name.member</code>).</li></ol><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(math.pi)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: 3.141592653589793</span></span></code></pre></div><hr><h3 id="import-specific-members" tabindex="-1">Import Specific Members <a class="header-anchor" href="#import-specific-members" aria-label="Permalink to &quot;Import Specific Members&quot;">​</a></h3><ol><li>Imports specific members (functions, classes, or variables) from a module.</li><li>Syntax:<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> member_name</span></span></code></pre></div></li><li>Directly access the imported member.</li></ol><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqrt</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sqrt(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: 5.0</span></span></code></pre></div><hr><h3 id="import-all-members" tabindex="-1">Import All Members <a class="header-anchor" href="#import-all-members" aria-label="Permalink to &quot;Import All Members&quot;">​</a></h3><ol><li>Imports all members from a module without using dot notation.</li><li>Syntax:<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span></code></pre></div></li><li>Not recommended as it can lead to namespace conflicts.</li></ol><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sin(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: 0.0</span></span></code></pre></div><hr><h3 id="rename-imported-module-or-member" tabindex="-1">Rename Imported Module or Member <a class="header-anchor" href="#rename-imported-module-or-member" aria-label="Permalink to &quot;Rename Imported Module or Member&quot;">​</a></h3><ol><li>Use the <code>as</code> keyword to provide an alias.</li><li>Syntax:<div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alias</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> member_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alias</span></span></code></pre></div></li></ol><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m.pi)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: 3.141592653589793</span></span></code></pre></div><hr><h2 id="using-name-and-main" tabindex="-1">Using <code>__name__</code> and <code>__main__</code> <a class="header-anchor" href="#using-name-and-main" aria-label="Permalink to &quot;Using \`__name__\` and \`__main__\`&quot;">​</a></h2><ol><li>The <code>__name__</code> variable is set to <code>&quot;__main__&quot;</code> when the module is run directly, but it takes the module name when imported.</li><li>Useful to execute code only when the script is run directly, not when imported.</li></ol><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># my_module.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> greet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    greet()</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Running my_module.py directly:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: Hello, World!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Importing my_module in another script:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my_module</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># No output</span></span></code></pre></div><hr><h2 id="installing-and-using-third-party-modules" tabindex="-1">Installing and Using Third-party Modules <a class="header-anchor" href="#installing-and-using-third-party-modules" aria-label="Permalink to &quot;Installing and Using Third-party Modules&quot;">​</a></h2><ol><li>Use <code>pip</code> (Python Package Installer) to install third-party modules.</li><li>Syntax:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module_name</span></span></code></pre></div></li><li>Example:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numpy</span></span></code></pre></div></li></ol><p>Example Usage:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.array([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: [1 2 3]</span></span></code></pre></div><hr><h2 id="built-in-functions-for-modules" tabindex="-1">Built-in Functions for Modules <a class="header-anchor" href="#built-in-functions-for-modules" aria-label="Permalink to &quot;Built-in Functions for Modules&quot;">​</a></h2><ol><li><code>dir(module)</code>: Lists all members of a module.</li><li><code>help(module)</code>: Displays documentation for a module.</li></ol><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(math))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Lists all functions and variables in the math module</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(math.sqrt)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Displays help for the sqrt function</span></span></code></pre></div><hr><h2 id="custom-modules" tabindex="-1">Custom Modules <a class="header-anchor" href="#custom-modules" aria-label="Permalink to &quot;Custom Modules&quot;">​</a></h2><ol><li>Create a <code>.py</code> file containing functions, classes, or variables.</li><li>Import it into other Python files.</li><li>Ensure the module is in the same directory or in a directory included in <code>sys.path</code>.</li></ol><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In my_module.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In main.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my_module</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_module.add(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: 8</span></span></code></pre></div><hr><h2 id="the-sys-module" tabindex="-1">The <code>sys</code> Module <a class="header-anchor" href="#the-sys-module" aria-label="Permalink to &quot;The \`sys\` Module&quot;">​</a></h2><ol><li>The <code>sys</code> module allows you to interact with the Python runtime environment.</li></ol><h3 id="common-attributes" tabindex="-1">Common Attributes: <a class="header-anchor" href="#common-attributes" aria-label="Permalink to &quot;Common Attributes:&quot;">​</a></h3><ul><li><code>sys.path</code>: List of directories Python searches for modules.</li><li><code>sys.argv</code>: List of command-line arguments passed to the script.</li></ul><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sys.path)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Prints module search paths</span></span></code></pre></div><hr><h2 id="the-os-module" tabindex="-1">The <code>os</code> Module <a class="header-anchor" href="#the-os-module" aria-label="Permalink to &quot;The \`os\` Module&quot;">​</a></h2><ol><li>The <code>os</code> module allows interaction with the operating system.</li></ol><h3 id="common-functions" tabindex="-1">Common Functions: <a class="header-anchor" href="#common-functions" aria-label="Permalink to &quot;Common Functions:&quot;">​</a></h3><ul><li><code>os.getcwd()</code>: Get current working directory.</li><li><code>os.listdir(path)</code>: List files in a directory.</li><li><code>os.rename(src, dst)</code>: Rename a file.</li><li><code>os.remove(file)</code>: Delete a file.</li></ul><p>Example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(os.getcwd())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: Current working directory</span></span></code></pre></div><hr><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><ol><li>Modules allow you to organize code into reusable components.</li><li>Use <code>import</code> statements to access built-in, third-party, or custom modules.</li><li>Use <code>pip</code> to install and manage third-party modules.</li><li>Leverage <code>sys</code> and <code>os</code> modules for runtime and system-level interactions.</li></ol>`,69)]))}const m=i(n,[["render",l]]);export{c as __pageData,m as default};
